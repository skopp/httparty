{"body":"# httparty\r\n\r\n***\r\n\r\nMakes http fun again!\r\n\r\n## Install\r\n\r\n```\r\ngem install httparty\r\n```\r\n\r\n## Requirements\r\n\r\n* multi_json and multi_xml\r\n* You like to party!\r\n\r\n## Examples\r\n\r\n```ruby\r\n# Use the class methods to get down to business quickly\r\nresponse = HTTParty.get('http://twitter.com/statuses/public_timeline.json')\r\nputs response.body, response.code, response.message, response.headers.inspect\r\n\r\nresponse.each do |item|\r\n  puts item['user']['screen_name']\r\nend\r\n\r\n# Or wrap things up in your own class\r\nclass Twitter\r\n  include HTTParty\r\n  base_uri 'twitter.com'\r\n\r\n  def initialize(u, p)\r\n    @auth = {:username => u, :password => p}\r\n  end\r\n\r\n  # which can be :friends, :user or :public\r\n  # options[:query] can be things like since, since_id, count, etc.\r\n  def timeline(which=:friends, options={})\r\n    options.merge!({:basic_auth => @auth})\r\n    self.class.get(\"/statuses/#{which}_timeline.json\", options)\r\n  end\r\n\r\n  def post(text)\r\n    options = { :body => {:status => text}, :basic_auth => @auth }\r\n    self.class.post('/statuses/update.json', options)\r\n  end\r\nend\r\n\r\ntwitter = Twitter.new(config['email'], config['password'])\r\npp twitter.timeline\r\n```\r\n\r\nSee the [examples directory](http://github.com/jnunemaker/httparty/tree/master/examples) for even more goodies.\r\n\r\n## Command Line Interface\r\n\r\nhttparty also includes the executable `httparty` which can be\r\nused to query web services and examine the resulting output. By default\r\nit will output the response as a pretty-printed Ruby object (useful for\r\ngrokking the structure of output). This can also be overridden to output\r\nformatted XML or JSON. Execute `httparty --help` for all the\r\noptions. Below is an example of how easy it is.\r\n\r\n```\r\nhttparty \"http://twitter.com/statuses/public_timeline.json\"\r\n```\r\n\r\n## Help and Docs\r\n\r\n* https://groups.google.com/forum/#!forum/httparty-gem\r\n* http://rdoc.info/projects/jnunemaker/httparty\r\n\r\n## Contributing\r\n\r\n* Fork the project.\r\n* Make your feature addition or bug fix.\r\n* Add tests for it. This is important so I don't break it in a future version unintentionally.\r\n* Commit, do not mess with rakefile, version, or history. (if you want to have your own version, that is fine but bump version in a commit by itself in another branch so I can ignore when I pull)\r\n* Send me a pull request. Bonus points for topic branches.\r\n","note":"Don't delete this file! It's used internally to help with page regeneration.","name":"HTTParty","tagline":"Makes http fun again!","google":""}